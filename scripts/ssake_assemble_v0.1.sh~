#!/bin/bash

# Preparation
data=$(echo $1| cut -f1 -d" ")
n_reads=$(echo $1 |cut -f2 -d" ")
cov_min=$(echo $1 |cut -f3 -d" ")
overlap=$(echo $1 |cut -f4 -d" ")
minbase=$(echo $1 |cut -f5 -d" ")
baseratio=$(echo $1 |cut -f6 -d" ")
outfolder=$(echo $1 |cut -f7 -d" ")
contig_min=$(echo $1 |cut -f8 -d" ")
error=$(echo $1 |cut -f9 -d" ")
read_min=$(echo $1 |cut -f10 -d" ")
a5=$(echo $1 |cut -f11 -d" ")
a3=$(echo $1 |cut -f12 -d" ")

a5rc=$(echo $a5 | rev | tr ATGC TACG)
a3rc=$(echo $a3 | rev | tr ATGC TACG)
filename=$(basename $data | sed 's/\.fast.//')
mkdir $outfolder/$filename
workdir=${outfolder}/${filename}

### Assembly ###
# Subsample, trim and convert to fasta
head -n $(($n_reads * 4)) $data |\
cutadapt -a $a5 -a $a5rc -a $a3 -a $a3rc -q $error -m $read_min - --quiet |\
sed -n '1~4s/^@/>/p;2~4p' > $workdir/reads.fa

# SSAKE
SSAKE -f $workdir/reads.fa -w $cov_min -m $overlap -o $minbase -r $baseratio -p 0 -b $workdir/$filename -h -v default >/dev/null

# Stats
bp_max=$(cat $workdir/$filename.contigs | sed -n 'p;n' | cut -f2 -d"|" | tr -d size | sort -nr | head -n1)
contig_bp=$(cat $workdir/$filename.contigs | sed -n 'p;n' | cut -f2 -d"|" | tr -d size)
contig_n=0
for int in $contig_bp
do
  [ $int -gt 500 ]  && contig_n=$((contig_n+1))
done
echo "$filename $bp_max $contig_n" >> $outfolder/$filename.stats

### Cleanup ###
mv $workdir/$filename.contigs $outfolder/"$filename.fa"
#mv $workdir/cov.txt $outfolder/"$filename.cov"
rm -rf $workdir

### Estimate coverage ###
# Mapping
# usearch8 -usearch_local $workdir/Sequences -db $workdir/contigs.fa -strand both -id 0.97 -query_cov 0.8 -samout $workdir/sam.tmp -quiet

# Calcaulate cov
#gawk '!($2 ~ "4")' $workdir/sam.tmp |\
#samtools view -bT $workdir/contigs.fa - 2> /dev/null |\
#samtools sort - 2> /dev/null |\
#samtools mpileup -Bf $workdir/contigs.fa - 2> /dev/null > $workdir/cov.tmp 

# Format cov
#cut -f5 $workdir/cov.tmp |\
#sed 's/[^actgACTG]//g' |\
#awk '{ print length; }' |\
#paste $workdir/cov.tmp - |\
#cut -f2,3,4,7 - > $workdir/cov.txt

### Notes ###
# $1 = required argument 1 from commandline
# ${2:-0.01} = optional argument 2 commandline or default value
# 2> /dev/null = redirects stderr and prevents messages in commandline
# |\ = pipe and new code line

### Comments ###
# Usearch doesn't seem to perform well around multiple insertions.
# Needs error handling.

